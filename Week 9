class Mhs:
    def __init__ (self, nim, nama, jenisKelamin, nomorHp, kelas, jam):
        self.nim = nim
        self.nama = nama
        self.jenisKelamin = jenisKelamin
        self.nomorHp = nomorHp
        self.kelas = kelas
        self.jam = jam
        self.jurusan = "IF" if nim[2:5] == "111" else "TI" if nim[2:5] == "112" else "SI" if nim[2:5] == "113" else "MN" if nim[2:5] == "211" else "AK"
        self.As = "mhs"
        
class Dsn:
    def __init__ (self, nip, nama, jenisKelamin, nomorHp, jabatan):
        self.nip = nip
        self.nama = nama
        self.jenisKelamin = jenisKelamin
        self.nomorHp = nomorHp
        self.jabatan = jabatan
        self.As = "dsn"
        
        
class Absensi:
    def __init__ (self, strategyMhs = False, strategyDsn = False):
        self.mhs = []
        self.dsn = []
        self.strategyMhs = strategyMhs
        self.strategyDsn = strategyDsn
    
    def printAbsensi(self):
        print("Daftar Mahasiswa yang hadir")
        print("="*40)
        if len(self.mhs) == 0:
            print("Belum ada mahasiswa yang hadir")
        else:
            for i in self.mhs:
                print(f"[ {i.nim} ] - [ {i.nama.title()} ] - [ {i.jenisKelamin.title()} ] - [ {i.nomorHp} ] - [ {i.jurusan}-{i.kelas.title()} {i.jam.title()} ]")
        print()
        self.strategyMhs = GetSum()
        print(f"Jumlah mahasiswa yang hadir: {self.strategyMhs.getSum(self.mhs)}")
        self.strategyMhs = False
        print()
        print()
        
        print("Daftar Dosen yang hadir")
        print("="*40)
        if len(self.dsn) == 0:
            print("Belum ada dosen yang hadir")
        else:
            for i in self.dsn:
                print(f"[ {i.nip} ] - [ {i.nama.title()} ] - [ {i.jenisKelamin.title()} ] - [ {i.nomorHp} ] - [ {i.jabatan.title()} ]")
        print()
        self.strategyDsn = GetSum()
        print(f"Jumlah dosen yang hadir: {self.strategyDsn.getSum(self.dsn)}")
        self.strategyDsn = False
        
    def searchByNimMhs (self, nim):
        for i in self.mhs:
            if i.nim == nim:
                return i

        return False
    
    def searchByNameMhs (self, nama):
        found = []
        for i in self.mhs:
            if i.nama == nama:
                found.append(i)
        
        return found

    def searchByNipDsn (self, nip):
        for i in self.dsn:
            if i.nip == nip:
                return i

        return False
    
    def searchByNameDsn (self, nama):
        found = []
        for i in self.dsn:
            if i.nama == nama:
                found.append(i)
        
        return found

    def sortedByMhs (self, num):
        if num == 1:
            self.strategyMhs = SortedByNim()
        elif num == 2:
            self.strategyMhs = SortedByNama()
        elif num == 3:
            self.strategyMhs = SortedByJurusan()
        
        self.mhs = self.strategyMhs.sorting(self.mhs)
    
    def sortedByDsn (self, num): 
        if num == 1:
            self.strategyDsn = SortedByNip()
        elif num == 2:
            self.strategyDsn = SortedByNama()
        
        self.dsn = self.strategyDsn.sorting(self.dsn)

class SortedByNim:
    def sorting (self, data):
        return sorted(data, key=lambda x: x.nim)
        
class SortedByNama:
    def sorting (self, data):
        return sorted(data, key=lambda x: x.nama)

class SortedByJurusan:
    def sorting (self, data):
        return sorted(data, key=lambda x: x.jurusan)

class SortedByNip:
    def sorting (self, data):
        return sorted(data, key=lambda x: x.nip)

class GetSum:
    def getSum(self, data):
        return len(data)


### Main Program ###
absensi = Absensi()

while True:
    print("Menu")
    print("="*30)
    print("1. Lihat Absensi")
    print("2. Mencari data")
    print("3. Mengurutkan data")
    print("4. Tambah data mahasiswa")
    print("5. Tambah data dosen")
    print("6. Exit")
    
    op = int(input("Pilihan menu ( 1 / 2 / 3 / 4 / 5 / 6 ):"))
    
    if op == 1:
        absensi.printAbsensi()
    
    elif op == 2:
        option = str(input("Data apa yang ingin dicari ( Mahasiswa / Dosen )? ")).lower()
        
        if option == "mahasiswa":
            searchBy = str(input("Pencarian berdasarkan ( nim / nama )? ")).lower()
            if searchBy == "nim":
                nim = str(input("NIM data yang dicari: "))
                found = absensi.searchByNimMhs(nim)

                if found:
                    print("Data ditemukan")
                    print(f"NIM: {found.nim}")
                    print(f"Nama: {found.nama}")
                    print(f"Nomor HP: {found.nomorHp}")
                    print(f"Jenis Kelamin: {found.jenisKelamin}")
                    print(f"Kelas: {found.jurusan}-{found.kelas} {found.jam}")
                else:
                    print("Data tidak ditemukan")
                    
            elif searchBy == "nama":
                nama = str(input("Nama data yang dicari: ")).lower()
                found = absensi.searchByNamaMhs(nama)

                if found:
                    for i in found:
                        print(f"Nama: {i.nama}")
                        print(f"NIM: {i.nim}")
                        print(f"Nomor HP: {i.nomorHp}")
                        print(f"Jenis Kelamin: {i.jenisKelamin}")
                        print(f"Kelas: {i.jurusan}-{i.kelas} {i.jam}")
                else:
                    print("Data tidak ditemukan")

        elif option == "dosen":
            searchBy = str(input("Pencarian berdasarkan ( nip / nama )? ")).lower()
            if searchBy == "nip":
                nip = str(input("NIP data yang dicari: "))
                found = absensi.searchByNipDsn(nip)

                if found:
                    print("Data ditemukan")
                    print(f"NIP: {found.nip}")
                    print(f"Nama: {found.nama}")
                    print(f"Nomor HP: {found.nomorHp}")
                    print(f"Jenis Kelamin: {found.jenisKelamin}")
                    print(f"Jabatan: {found.jabatan}")
                else:
                    print("Data tidak ditemukan")
                    
            elif searchBy == "nama":
                nama = str(input("Nama data yang dicari: ")).lower()
                found = absensi.searchByNameDsn(nama)

                if found:
                    for i in found:
                        print(f"Nama: {i.nama}")
                        print(f"NIP: {i.nip}")
                        print(f"Nomor HP: {i.nomorHp}")
                        print(f"Jenis Kelamin: {i.jenisKelamin}")
                        print(f"Jabatan: {i.jabatan}")
                else:
                    print("Data tidak ditemukan")
    
    elif op == 3:
        print("Pilih data yang ingin diurutkan:")
        print("1. Mahasiswa")
        print("2. Dosen")
        dataOption = int(input("Pilihan ( 1 / 2 ): "))
        
        if dataOption == 1:
            print("Pilih cara pengurutan mahasiswa:")
            print("1. Berdasarkan NIM")
            print("2. Berdasarkan Nama")
            print("3. Berdasarkan Jurusan")
            sortOption = int(input("Pilihan ( 1 / 2 / 3 ): "))
            absensi.sortedByMhs(sortOption)
            print("Data mahasiswa berhasil diurutkan.")

        elif dataOption == 2:
            print("Pilih cara pengurutan dosen:")
            print("1. Berdasarkan NIP")
            print("2. Berdasarkan Nama")
            sortOption = int(input("Pilihan ( 1 / 2 ): "))
            absensi.sortedByDsn(sortOption)
            print("Data dosen berhasil diurutkan.")
    
    elif op == 4:
        nim = str(input("NIM: "))
        nama = str(input("Nama: ")).lower()
        jenisKelamin = str(input("Jenis Kelamin ( L / P ): ")).lower()
        nomorHp = str(input("Nomor HP: ")).lower()
        kelas = str(input("Kelas: ")).lower()
        jam = str(input("Jam: ")).lower()

        mhs = Mhs(nim, nama, jenisKelamin, nomorHp, kelas, jam)
        absensi.mhs.append(mhs)

        print(f"Mahasiswa {nama} berhasil ditambahkan!")
    
    elif op == 5:
        nip = str(input("NIP: "))
        nama = str(input("Nama: "))
        jenisKelamin = str(input("Jenis Kelamin ( L / P ): "))
        nomorHp = str(input("Nomor HP: "))
        jabatan = str(input("Jabatan: "))

        dsn = Dsn(nip, nama, jenisKelamin, nomorHp, jabatan)
        absensi.dsn.append(dsn)

        print(f"Dosen {nama} berhasil ditambahkan!")
    
    elif op == 6:
        print("Thank you.")
        break
